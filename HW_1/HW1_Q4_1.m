%% Global System Definition

% Coordinate system
globSys.e1 = [1; 0 ; 0]; % x
globSys.e2 = [0; 1; 0]; % y
globSys.e3 = [0; 0; 1]; % z

%% Local System Definition

% Defining theta as a symbolic variable
syms theta

% Coordinate system
locSys.e3 = [1; 0; 0]; 
locSys.e1 = [0; cos(theta); sin(theta)]; 
locSys.e2 = [0; -sin(theta); cos(theta)]; 

%% Transformation Matrix

% Combining all unit vectors into a matrix
globSys.comb = [globSys.e1 globSys.e2 globSys.e3];
locSys.comb = [locSys.e1 locSys.e2 locSys.e3];

% Determining transformation matrix
for ii = 1: length(globSys.e1)
    for jj = 1: length(locSys.e1)
        
        b(ii, jj) = locSys.comb(jj, ii);
          
    end
end


%% Stress Transformation Matrix

stressTransform = [b(1, 1) ^ 2, b(1, 2) ^ 2, ...
    b(1, 3) ^ 2, 2 * b(1, 2) * b(1, 3), 2 * b(1, 1) * ...
    b(1, 3), 2 * b(1, 1) * b(1, 2); b(2, 1) ^ 2 ,...
    b(2, 2) ^ 2, b(2, 3) ^ 2, 2 * b(2, 2) * b(2, 3), 2 * b(2, 1) * ...
    b(2, 3), 2 * b(2, 1) * b(2, 2); b(3, 1) ^ 2, b(3, 2) ^ 2, ...
    b(3, 3) ^ 2, 2 * b(3, 2) * b(3, 3), 2 * b(3, 1) * b(3, 3), ...
    2 * b(3, 1) * b(3, 2); b(2, 1) * b(3, 1), b(2, 2) * b(3, 3), ...
    b(2, 3) * b(3, 3), (b(2, 2) * b(3, 3)) + (b(2, 3) * b(3, 2)), ...
    (b(2, 3) * b(3, 1)) + (b(2, 1) * b(3, 3)), (b(3, 1) * b(2, 2)) + ...
    (b(2, 1) * b(3, 2)); b(1, 1) * b(3, 1), b(1, 2) * b(3, 2), b(1, 3) ...
    * b(3, 3), (b(1, 3) * b(3, 2)) + (b(1, 2) * b(3, 3)), ...
    (b(1, 1) * b(3, 3)) + (b(1, 3) * b(3, 1)), (b(1, 1) * b(3, 2)) + ...
    (b(1, 2) * b(3, 1)); b(1, 1) * b(2, 1), b(1, 2) * b(2, 2), b(1, 3) ...
    * b(2, 3), (b(1, 2) * b(2, 3)) * (b(1, 3) * b(2, 2)), (b(1, 1) * ...
    b(2, 3)) + (b(1, 3) * b(2, 1)), (b(1, 1) * b(2, 2)) + (b(1, 2) * ...
    b(2, 1))];

%% Strain Transfromation Matrix

strainTransform = [b(1, 1) ^ 2, b(1, 2) ^ 2, ...
    b(1, 3) ^ 2, b(1, 2) * b(1, 3), b(1, 1) * ...
    b(1, 3), b(1, 1) * b(1, 2); b(2, 1) ^ 2 ,...
    b(2, 2) ^ 2, b(2, 3) ^ 2, b(2, 2) * b(2, 3), b(2, 1) * ...
    b(2, 3), b(2, 1) * b(2, 2); b(3, 1) ^ 2, b(3, 2) ^ 2, ...
    b(3, 3) ^ 2, b(3, 2) * b(3, 3), b(3, 1) * b(3, 3), ...
    b(3, 1) * b(3, 2); 2 * b(2, 1) * b(3, 1), 2 * b(2, 2) * b(3, 3), ...
    2 * b(2, 3) * b(3, 3), (b(2, 2) * b(3, 3)) + (b(2, 3) * b(3, 2)), ...
    (b(2, 3) * b(3, 1)) + (b(2, 1) * b(3, 3)), (b(3, 1) * b(2, 2)) + ...
    (b(2, 1) * b(3, 2)); 2 * b(1, 1) * b(3, 1), 2 * b(1, 2) * b(3, 2), ...
    2 * b(1, 3) * b(3, 3), (b(1, 3) * b(3, 2)) + (b(1, 2) * b(3, 3)), ...
    (b(1, 1) * b(3, 3)) + (b(1, 3) * b(3, 1)), (b(1, 1) * b(3, 2)) + ...
    (b(1, 2) * b(3, 1)); 2 * b(1, 1) * b(2, 1), 2 * b(1, 2) * b(2, 2), ...
    2 *  b(1, 3) * b(2, 3), (b(1, 2) * b(2, 3)) * (b(1, 3) * b(2, 2)), ...
    (b(1, 1) * b(2, 3)) + (b(1, 3) * b(2, 1)), (b(1, 1) * b(2, 2)) + ...
    (b(1, 2) *  b(2, 1))];

